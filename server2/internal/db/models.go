// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type UsersRole string

const (
	UsersRoleS UsersRole = "S"
	UsersRoleT UsersRole = "T"
	UsersRoleA UsersRole = "A"
	UsersRoleN UsersRole = "N"
)

func (e *UsersRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UsersRole(s)
	case string:
		*e = UsersRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UsersRole: %T", src)
	}
	return nil
}

type NullUsersRole struct {
	UsersRole UsersRole
	Valid     bool // Valid is true if UsersRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUsersRole) Scan(value interface{}) error {
	if value == nil {
		ns.UsersRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UsersRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUsersRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UsersRole), nil
}

type AssignmentsClass struct {
	AssignmentID pgtype.UUID
	ClassID      int32
}

type AssignmentsDatum struct {
	AssignmentID pgtype.UUID
	TeacherID    pgtype.Int4
	SettingsID   pgtype.UUID
	Name         pgtype.Text
	Due          pgtype.Int8
	IsActive     pgtype.Bool
}

type AssignmentsGameSession struct {
	AssignmentID  pgtype.UUID
	GameSessionID pgtype.UUID
}

type GameSessionsDatum struct {
	GameSessionID  pgtype.UUID
	UserID         pgtype.Int4
	SettingsID     pgtype.UUID
	Timestamp      pgtype.Int8
	QuestionsCount pgtype.Int4
	CorrectCount   pgtype.Int4
	Score          pgtype.Int2
	Time           pgtype.Int2
}

type GameSessionsSetting struct {
	SettingsID  pgtype.UUID
	LimitType   pgtype.Int2
	LimitAmount pgtype.Int2
	Min         pgtype.Int4
	Max         pgtype.Int4
	Add         pgtype.Bool
	Sub         pgtype.Bool
	Mult        pgtype.Bool
	Div         pgtype.Bool
}

type StudentsDatum struct {
	UserID    int32
	TeacherID pgtype.Int4
	ClassID   pgtype.Int4
}

type TeachersClass struct {
	ClassID   int32
	TeacherID pgtype.Int4
	Name      pgtype.Text
}

type TeachersDatum struct {
	TeacherID int32
	School    pgtype.Text
}

type UsersAccountStatus struct {
	UserID         pgtype.Int4
	IsActive       bool
	MembershipType int16
}

type UsersContactInfo struct {
	UserID pgtype.Int4
	Email  string
	Phone  string
}

type UsersDatum struct {
	UserID    int32
	Username  pgtype.Text
	Password  pgtype.Text
	Salt      pgtype.Text
	FirstName pgtype.Text
	LastName  pgtype.Text
	Role      NullUsersRole
	Vertical  pgtype.Bool
	CreatedAt pgtype.Int8
	UpdatedAt pgtype.Int8
}

type UsersID struct {
	UserID int32
}

type UsersPasswordResetCode struct {
	UserID    int32
	Code      pgtype.Text
	CreatedAt pgtype.Int8
}

type UsersValidationCode struct {
	UserID   pgtype.Int4
	Code     pgtype.UUID
	IssuedAt pgtype.Int8
}
